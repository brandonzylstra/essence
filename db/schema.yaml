# Enhanced YAML Schema with Default Columns and Pattern Matching
# This file will be converted to Atlas HCL format automatically

# Global settings
schema_name: main
rails_version: "8.0"

# Default columns applied to all tables (unless overridden)
defaults:
  "*":
    columns:
      id: primary_key
      created_at: datetime not_null
      updated_at: datetime not_null

# Pattern-based column attribute inference
column_patterns:
  # Foreign key columns: _id suffix gets integer type with foreign key reference
  - pattern: "_id$"
    template: "integer -> {table}.id on_delete=cascade not_null"
    description: "Foreign key columns automatically reference the related table"
    
  # Timestamp columns: _at suffix gets datetime not_null
  - pattern: "_at$"
    attributes: "datetime not_null"
    description: "Timestamp columns get datetime type with not_null constraint"
    
  # Default fallback: unmatched columns become strings
  - pattern: ".*"
    attributes: "string"
    description: "Default type for columns that don't match other patterns"

# Table definitions
tables:
  # Core entities
  leagues:
    columns:
      # id, created_at, updated_at automatically added from defaults
      name: string(255) not_null unique
      abbreviation: string(10)
      description: text
      website: string(500)
      contact_email: string(255)
      active: boolean default=true not_null

  seasons:
    columns:
      # id, created_at, updated_at automatically added from defaults
      name: string(100) not_null
      start_date: date not_null
      end_date: date not_null
      active: boolean default=false not_null
    indexes:
      - active

  users:
    columns:
      # id, created_at, updated_at automatically added from defaults
      first_name: string(100) not_null
      last_name: string(100) not_null
      email: string(255) not_null unique
      phone: string(20)
      school: string(255)
      graduation_year: integer
      # league_id automatically becomes: integer -> leagues.id on_delete=cascade not_null
      league_id: ~
      role: string(20) default='participant' not_null
      active: boolean default=true not_null
      # last_login_at automatically becomes: datetime not_null
      last_login_at: ~
    indexes:
      - email
      - league_id
      - role

  teams:
    columns:
      # id, created_at, updated_at automatically added from defaults
      name: string(255) not_null
      # league_id and season_id automatically get foreign key constraints
      league_id: ~
      season_id: ~
      school: string(255)
      active: boolean default=true not_null
    indexes:
      - league_id
      - season_id

  team_memberships:
    columns:
      # id, created_at, updated_at automatically added from defaults
      team_id: ~
      user_id: ~
      role: string(50) default='member' not_null
    indexes:
      - team_id
      - user_id
      - columns: [team_id, user_id]
        unique: true

  event_types:
    columns:
      # id, created_at, updated_at automatically added from defaults
      name: string(100) not_null unique
      abbreviation: string(10)
      category: string(20) not_null # 'speech', 'debate', 'interpretation'
      participant_type: string(20) not_null # 'individual', 'team'
      max_participants_per_match: integer default=2 not_null
      description: text
      rules_url: string(500)
      active: boolean default=true not_null
    indexes:
      - category
      - participant_type

  tournaments:
    columns:
      # id, created_at, updated_at automatically added from defaults
      name: string(255) not_null
      league_id: ~
      season_id: ~
      start_date: date not_null
      end_date: date not_null
      location: string(500)
      format: string(20) default='in_person' not_null # 'in_person', 'virtual', 'hybrid'
      # registration_deadline_at automatically becomes: datetime not_null
      registration_deadline_at: ~
      max_participants: integer
      entry_fee: decimal(8,2)
      status: string(20) default='upcoming' not_null # 'upcoming', 'active', 'completed', 'cancelled'
      description: text
    indexes:
      - league_id
      - season_id
      - start_date
      - status

  tournament_events:
    columns:
      # id, created_at, updated_at automatically added from defaults
      tournament_id: ~
      event_type_id: ~
      max_participants: integer
      entry_fee: decimal(8,2)
      registration_deadline_at: ~
      status: string(20) default='open' not_null # 'open', 'closed', 'cancelled'
    indexes:
      - tournament_id
      - event_type_id
      - columns: [tournament_id, event_type_id]
        unique: true

  rooms:
    columns:
      # id, created_at, updated_at automatically added from defaults
      tournament_id: ~
      name: string(100) not_null
      room_type: string(20) default='physical' not_null # 'physical', 'virtual'
      capacity: integer
      location: string(500)
      virtual_link: string(500)
      equipment: text
      notes: text
      available: boolean default=true not_null
    indexes:
      - tournament_id
      - room_type

  rounds:
    columns:
      # id, created_at, updated_at automatically added from defaults
      tournament_event_id: ~
      round_number: integer not_null
      name: string(100) not_null
      round_type: string(20) default='preliminary' not_null # 'preliminary', 'elimination', 'final'
      start_time: datetime
      end_time: datetime
      status: string(20) default='scheduled' not_null # 'scheduled', 'active', 'completed', 'cancelled'
      notes: text
    indexes:
      - tournament_event_id
      - columns: [tournament_event_id, round_number]
        unique: true
      - start_time

  matches:
    columns:
      # id, created_at, updated_at automatically added from defaults
      round_id: ~
      # room_id with set_null on delete since matches can survive room deletion
      room_id: integer -> rooms.id on_delete=set_null
      match_number: integer not_null
      start_time: datetime
      end_time: datetime
      status: string(20) default='scheduled' not_null # 'scheduled', 'active', 'completed', 'cancelled'
      winner_id: integer
      winner_type: string(20) # 'User', 'Team'
      notes: text
    indexes:
      - round_id
      - room_id
      - columns: [round_id, match_number]
        unique: true
      - start_time

  match_participants:
    columns:
      # id, created_at, updated_at automatically added from defaults
      match_id: ~
      participant_id: integer not_null
      participant_type: string(20) not_null # 'User', 'Team'
      position: string(20) # 'affirmative', 'negative', 'speaker_1', etc.
      speaking_order: integer
      score: decimal(8,2)
      rank: integer
    indexes:
      - match_id
      - columns: [participant_id, participant_type]
      - columns: [match_id, participant_id, participant_type]
        unique: true

  judges:
    columns:
      # id, created_at, updated_at automatically added from defaults
      user_id: ~
      tournament_id: ~
      experience_level: string(20) default='novice' not_null # 'novice', 'experienced', 'expert'
      certifications: text
      preferences: text
      availability: text
      active: boolean default=true not_null
    indexes:
      - user_id
      - tournament_id
      - columns: [user_id, tournament_id]
        unique: true

  match_judges:
    columns:
      # id, created_at, updated_at automatically added from defaults
      match_id: ~
      judge_id: ~
      role: string(20) default='judge' not_null # 'judge', 'timekeeper', 'observer'
      status: string(20) default='assigned' not_null # 'assigned', 'confirmed', 'absent'
    indexes:
      - match_id
      - judge_id
      - columns: [match_id, judge_id]
        unique: true

  registrations:
    columns:
      # id, created_at, updated_at automatically added from defaults
      tournament_event_id: ~
      participant_id: integer not_null
      participant_type: string(20) not_null # 'User', 'Team'
      # registration_date_at automatically becomes: datetime not_null (but we want just date)
      registration_date: date not_null
      status: string(20) default='registered' not_null # 'registered', 'confirmed', 'withdrawn', 'disqualified'
      fee_paid: boolean default=false not_null
      payment_date_at: ~
      notes: text
    indexes:
      - tournament_event_id
      - columns: [participant_id, participant_type]
      - columns: [tournament_event_id, participant_id, participant_type]
        unique: true
      - status

  awards:
    columns:
      # id, created_at, updated_at automatically added from defaults
      name: string(255) not_null
      tournament_event_id: ~
      recipient_id: integer not_null
      recipient_type: string(20) not_null # 'User', 'Team'
      award_type: string(50) default='placement' not_null # 'placement', 'special', 'recognition'
      position: integer # 1st, 2nd, 3rd, etc.
      description: text
      awarded_at: ~
    indexes:
      - tournament_event_id
      - columns: [recipient_id, recipient_type]
      - award_type
      - position

  # Analytics and tracking tables
  records:
    columns:
      # id, created_at, updated_at automatically added from defaults
      user_id: ~
      record_type: string(100) not_null
      value: text
    indexes:
      - user_id
      - record_type

# Seed data definitions
seeds:
  event_types:
    - name: "Persuasive Speaking"
      abbreviation: "PERS"
      category: "speech"
      participant_type: "individual"
      max_participants_per_match: 8
      description: "A speech designed to convince the audience of a particular viewpoint"

    - name: "Informative Speaking"
      abbreviation: "INFO"
      category: "speech"
      participant_type: "individual"
      max_participants_per_match: 8
      description: "A speech that educates the audience about a specific topic"

    - name: "Original Oratory"
      abbreviation: "OO"
      category: "speech"
      participant_type: "individual"
      max_participants_per_match: 8
      description: "An original speech on a topic of the speaker's choosing"

    - name: "Duo Interpretation"
      abbreviation: "DUO"
      category: "interpretation"
      participant_type: "team"
      max_participants_per_match: 8
      description: "A dramatic performance by two people"

    - name: "Team Policy Debate"
      abbreviation: "TP"
      category: "debate"
      participant_type: "team"
      max_participants_per_match: 2
      description: "A debate format with two-person teams arguing policy resolutions"

    - name: "Lincoln Douglas Debate"
      abbreviation: "LD"
      category: "debate"
      participant_type: "individual"
      max_participants_per_match: 2
      description: "A one-on-one debate format focusing on value and philosophical arguments"

    - name: "Apologetics"
      abbreviation: "APOL"
      category: "speech"
      participant_type: "individual"
      max_participants_per_match: 8
      description: "A defense of the Christian faith in response to questions"